<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MediaInfo.Wrapper</name>
    </assembly>
    <members>
        <member name="T:MediaInfo.Builder.AudioStreamBuilder">
            <summary>
            Describes method to build audio stream.
            </summary>
        </member>
        <member name="P:MediaInfo.Builder.AudioStreamBuilder.Kind">
            <inheritdoc />
        </member>
        <member name="P:MediaInfo.Builder.AudioStreamBuilder.StreamKind">
            <inheritdoc />
        </member>
        <member name="M:MediaInfo.Builder.AudioTagBuilder.#ctor(MediaInfo.MediaInfo,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MediaInfo.Builder.AudioTagBuilder"/> class.
            </summary>
            <param name="mediaInfo">The media information.</param>
            <param name="streamPosition">The stream position.</param>
        </member>
        <member name="T:MediaInfo.Builder.ChapterStreamBuilder">
            <summary>
            Describes method to build chapter stream.
            </summary>
        </member>
        <member name="P:MediaInfo.Builder.ChapterStreamBuilder.Kind">
            <inheritdoc />
        </member>
        <member name="P:MediaInfo.Builder.ChapterStreamBuilder.StreamKind">
            <inheritdoc />
        </member>
        <member name="T:MediaInfo.Builder.ParseDelegate`1">
            <summary>
            Converts the string representation of a value to specified type
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source value.</param>
            <param name="result">The result.</param>
            <returns><b>true</b> if s was converted successfully; otherwise, <b>false</b>.</returns>
        </member>
        <member name="P:MediaInfo.Builder.GeneralTagBuilder`1.MediaInfo">
            <summary>
            Gets the media information.
            </summary>
        </member>
        <member name="T:MediaInfo.Builder.IMediaBuilder`1">
            <summary>
            Describes media builder interface
            </summary>
            <typeparam name="TStream">The type of the stream.</typeparam>
        </member>
        <member name="M:MediaInfo.Builder.IMediaBuilder`1.Build">
            <summary>
            Builds media stream.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MediaInfo.Builder.LanguageMediaStreamBuilder`1">
            <summary>
            Describes base methods to build media stream with language
            </summary>
            <typeparam name="TStream">The type of the stream.</typeparam>
        </member>
        <member name="M:MediaInfo.Builder.LanguageMediaStreamBuilder`1.#ctor(MediaInfo.MediaInfo,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MediaInfo.Builder.LanguageMediaStreamBuilder`1"/> class.
            </summary>
            <param name="info">The media info object.</param>
            <param name="number">The stream number.</param>
            <param name="position">The stream position.</param>
        </member>
        <member name="M:MediaInfo.Builder.LanguageMediaStreamBuilder`1.Build">
            <inheritdoc />
        </member>
        <member name="T:MediaInfo.Builder.MediaStreamBuilder`1">
            <summary>
            Describes base methods to build media stream
            </summary>
            <typeparam name="TStream">The type of the stream.</typeparam>
        </member>
        <member name="T:MediaInfo.Builder.MediaStreamBuilder`1.ParseDelegate`1">
            <summary>
            Converts the string representation of a value to specified type
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source value.</param>
            <param name="result">The result.</param>
            <returns><b>true</b> if s was converted successfully; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:MediaInfo.Builder.MediaStreamBuilder`1.#ctor(MediaInfo.MediaInfo,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MediaInfo.Builder.MediaStreamBuilder`1"/> class.
            </summary>
            <param name="info">The media info object.</param>
            <param name="number">The stream number.</param>
            <param name="position">The stream position.</param>
        </member>
        <member name="P:MediaInfo.Builder.MediaStreamBuilder`1.StreamPosition">
            <summary>
            Gets the stream position.
            </summary>
            <value>
            The stream position.
            </value>
        </member>
        <member name="P:MediaInfo.Builder.MediaStreamBuilder`1.StreamNumber">
            <summary>
            Gets the logical stream number.
            </summary>
            <value>
            The logical stream number.
            </value>
        </member>
        <member name="P:MediaInfo.Builder.MediaStreamBuilder`1.Kind">
            <summary>
            Gets the kind of media stream.
            </summary>
            <value>
            The kind of media stream.
            </value>
        </member>
        <member name="P:MediaInfo.Builder.MediaStreamBuilder`1.StreamKind">
            <summary>
            Gets the kind of the stream.
            </summary>
            <value>
            The kind of the stream.
            </value>
        </member>
        <member name="P:MediaInfo.Builder.MediaStreamBuilder`1.Info">
            <summary>
            Gets the media info object to access to low-level functions.
            </summary>
            <value>
            The media info object.
            </value>
        </member>
        <member name="M:MediaInfo.Builder.MediaStreamBuilder`1.Build">
            <inheritdoc />
        </member>
        <member name="M:MediaInfo.Builder.MediaStreamBuilder`1.Get``1(System.String,MediaInfo.Builder.MediaStreamBuilder{`0}.ParseDelegate{``0},System.Func{System.String,System.String})">
            <summary>
            Gets the property <typeparamref name="T">value</typeparamref> by the <paramref name="parameter">property name</paramref>.
            </summary>
            <param name="parameter">The stream parameter name.</param>
            <param name="convert"></param>
            <param name="extractResult">The manual extract result function.</param>
            <returns>Returns property <typeparamref name="T">value</typeparamref> of specified stream <paramref name="parameter">property name</paramref>.</returns>
        </member>
        <member name="M:MediaInfo.Builder.MediaStreamBuilder`1.Get``1(System.Int32,MediaInfo.InfoKind,MediaInfo.Builder.MediaStreamBuilder{`0}.ParseDelegate{``0},System.Func{System.String,System.String})">
            <summary>
            Gets the property <typeparamref name="T">value</typeparamref> by the <paramref name="parameter">property index</paramref>.
            </summary>
            <param name="parameter">The stream property index.</param>
            <param name="infoKind">The kind of property value</param>
            <param name="convert"></param>
            <param name="extractResult">The manual extract result function.</param>
            <returns>Returns property <typeparamref name="T">value</typeparamref> of specified stream <paramref name="parameter">property index</paramref>.</returns>
        </member>
        <member name="M:MediaInfo.Builder.MediaStreamBuilder`1.Get(System.String,System.Func{System.String,System.String})">
            <summary>
            Gets the specified property value by <paramref name="parameter">property name</paramref>.
            </summary>
            <param name="parameter">The parameter.</param>
            <param name="extractResult">The extract result.</param>
            <returns>Returns property value by name. If property does not defined will return <see cref="F:System.String.Empty"/>.</returns>
        </member>
        <member name="M:MediaInfo.Builder.MediaStreamBuilder`1.Get(System.Int32,MediaInfo.InfoKind,System.Func{System.String,System.String})">
            <summary>
            Gets the specified property value by the <paramref name="parameter">property index</paramref>.
            </summary>
            <param name="parameter">The property index.</param>
            <param name="infoKind">The kind of property value</param>
            <param name="extractResult">The extract result.</param>
            <returns>Returns property value by name. If property does not defined will return <see cref="F:System.String.Empty"/>.</returns>
        </member>
        <member name="T:MediaInfo.Builder.MenuStreamBuilder">
            <summary>
            Describes method to build menu stream.
            </summary>
        </member>
        <member name="P:MediaInfo.Builder.MenuStreamBuilder.Kind">
            <inheritdoc />
        </member>
        <member name="P:MediaInfo.Builder.MenuStreamBuilder.StreamKind">
            <inheritdoc />
        </member>
        <member name="M:MediaInfo.Builder.MenuStreamBuilder.Build">
            <inheritdoc />
        </member>
        <member name="T:MediaInfo.Builder.SubtitleStreamBuilder">
            <summary>
            Describes base methods to build subtitle stream.
            </summary>
        </member>
        <member name="M:MediaInfo.Builder.SubtitleStreamBuilder.#ctor(MediaInfo.MediaInfo,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MediaInfo.Builder.SubtitleStreamBuilder"/> class.
            </summary>
            <param name="info">The media info object.</param>
            <param name="number">The stream number.</param>
            <param name="position">The stream position.</param>
        </member>
        <member name="P:MediaInfo.Builder.SubtitleStreamBuilder.Kind">
            <inheritdoc />
        </member>
        <member name="P:MediaInfo.Builder.SubtitleStreamBuilder.StreamKind">
            <inheritdoc />
        </member>
        <member name="M:MediaInfo.Builder.SubtitleStreamBuilder.Build">
            <inheritdoc />
        </member>
        <member name="T:MediaInfo.Builder.TagBuilderHelper">
            <summary>
            Tag builder helper class
            </summary>
        </member>
        <member name="M:MediaInfo.Builder.TagBuilderHelper.TryGetBool(System.String,System.Boolean@)">
            <summary>
            Tries the parse.
            </summary>
            <param name="source">The source string.</param>
            <param name="result">if set to <c>true</c> [result].</param>
            <returns><c>true</c> if source string is boolean value, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:MediaInfo.Builder.TagBuilderHelper.TryGetString(System.String,System.Object@)">
            <summary>
            Tries the get string.
            </summary>
            <param name="source">The source string.</param>
            <param name="value">The result value.</param>
            <returns><c>true</c> if source string is not empty, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:MediaInfo.Builder.TagBuilderHelper.TryGetString(System.String,System.String@)">
            <summary>
            Tries the get string.
            </summary>
            <param name="source">The source string.</param>
            <param name="value">The result value.</param>
            <returns><c>true</c> if source string is not empty, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:MediaInfo.Builder.TagBuilderHelper.TryGetBase64(System.String,System.Object@)">
            <summary>
            Tries the get string in BASE64.
            </summary>
            <param name="source">The source BASE64 string.</param>
            <param name="value">The result value.</param>
            <returns><c>true</c> if source string is not empty and valid BASE64 string, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:MediaInfo.Builder.TagBuilderHelper.TryGetBase64(System.String,System.Byte[]@)">
            <summary>
            Tries the get string in BASE64.
            </summary>
            <param name="source">The source BASE64 string.</param>
            <param name="value">The result value as byte array.</param>
            <returns><c>true</c> if source string is not empty and valid BASE64 string, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:MediaInfo.Builder.TagBuilderHelper.TryGetInt(System.String,System.Object@)">
            <summary>
            Tries the get int value.
            </summary>
            <param name="source">The source string.</param>
            <param name="value">The result int value.</param>
            <returns><c>true</c> if source string is not empty and valid integer value, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:MediaInfo.Builder.TagBuilderHelper.TryGetInt(System.String,System.Int32@)">
            <summary>
            Tries the get int value.
            </summary>
            <param name="source">The source string.</param>
            <param name="value">The result int value.</param>
            <returns><c>true</c> if source string is not empty and valid integer value, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:MediaInfo.Builder.TagBuilderHelper.TryGetLong(System.String,System.Object@)">
            <summary>
            Tries the get long value.
            </summary>
            <param name="source">The source string.</param>
            <param name="value">The result long value.</param>
            <returns><c>true</c> if source string is not empty and valid long integer value, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:MediaInfo.Builder.TagBuilderHelper.TryGetLong(System.String,System.Int64@)">
            <summary>
            Tries the get long value.
            </summary>
            <param name="source">The source string.</param>
            <param name="value">The result long value.</param>
            <returns><c>true</c> if source string is not empty and valid long integer value, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:MediaInfo.Builder.TagBuilderHelper.TryGetDouble(System.String,System.Object@)">
            <summary>
            Tries the get double value.
            </summary>
            <param name="source">The source string.</param>
            <param name="value">The result double value.</param>
            <returns><c>true</c> if source string is not empty and valid double value, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:MediaInfo.Builder.TagBuilderHelper.TryGetBitrateMode(System.String,MediaInfo.Model.BitrateMode@)">
            <summary>
            Tries the get <see cref="T:MediaInfo.Model.BitrateMode"/> value.
            </summary>
            <param name="source">The source string.</param>
            <param name="value">The result <see cref="T:MediaInfo.Model.BitrateMode"/> value.</param>
            <returns><c>true</c> if source string is not empty and valid <see cref="T:MediaInfo.Model.BitrateMode"/> value, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:MediaInfo.Builder.TagBuilderHelper.TryGetDouble(System.String,System.Double@)">
            <summary>
            Tries the get double value.
            </summary>
            <param name="source">The source string.</param>
            <param name="value">The result double value.</param>
            <returns><c>true</c> if source string is not empty and valid double value, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:MediaInfo.Builder.TagBuilderHelper.TryGetStereoMode(System.String,MediaInfo.Model.StereoMode@)">
            <summary>A string extension method that attempts to get stereo mode a StereoMode from the given string.</summary>
            <param name="source">The source.</param>
            <param name="mode">The stereo mode.</param>
            <returns>True if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:MediaInfo.Builder.TagBuilderHelper.TryGetDate(System.String,System.Object@)">
            <summary>
            Tries the get date value.
            </summary>
            <param name="source">The source string.</param>
            <param name="value">The result date value.</param>
            <returns><c>true</c> if source string is not empty and valid date value, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:MediaInfo.Builder.TagBuilderHelper.TryGetDate(System.String,System.DateTime@)">
            <summary>
            Tries the get date value.
            </summary>
            <param name="source">The source string.</param>
            <param name="value">The result date value.</param>
            <returns><c>true</c> if source string is not empty and valid date value, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:MediaInfo.Builder.VideoStreamBuilder">
            <summary>
            Describes base methods to build video stream.
            </summary>
        </member>
        <member name="M:MediaInfo.Builder.VideoStreamBuilder.#ctor(MediaInfo.MediaInfo,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MediaInfo.Builder.VideoStreamBuilder"/> class.
            </summary>
            <param name="info">The media info object.</param>
            <param name="number">The stream number.</param>
            <param name="position">The stream position.</param>
        </member>
        <member name="P:MediaInfo.Builder.VideoStreamBuilder.Kind">
            <inheritdoc />
        </member>
        <member name="P:MediaInfo.Builder.VideoStreamBuilder.StreamKind">
            <inheritdoc />
        </member>
        <member name="M:MediaInfo.Builder.VideoTagBuilder.#ctor(MediaInfo.MediaInfo,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MediaInfo.Builder.VideoTagBuilder"/> class.
            </summary>
            <param name="mediaInfo">The media information.</param>
            <param name="streamPosition">The stream position.</param>
        </member>
        <member name="T:MediaInfo.FileNameExtensions">
            <summary>
            Static extensions for file paths
            </summary>
        </member>
        <member name="M:MediaInfo.FileNameExtensions.IsLiveTv(System.String)">
            <summary>
            Determines whether path is live TV.
            </summary>
            <param name="path">The path.</param>
            <returns>
              <c>true</c> if the specified path is live TV; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MediaInfo.FileNameExtensions.IsRtsp(System.String)">
            <summary>
            Determines whether this instance is RTSP.
            </summary>
            <param name="path">The path.</param>
            <returns>
              <c>true</c> if the specified path is RTSP; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MediaInfo.FileNameExtensions.IsNetworkVideo(System.String)">
            <summary>
            Determines whether path is network video.
            </summary>
            <param name="path">The path.</param>
            <returns>
              <c>true</c> if the specified path is network video; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MediaInfo.FileNameExtensions.IsVideo(System.String)">
            <summary>
            Determines whether the specified path is video.
            </summary>
            <param name="path">The path.</param>
            <returns>
              <c>true</c> if the specified path is video; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MediaInfo.FileNameExtensions.IsPicture(System.String)">
            <summary>
            Determines whether this instance is picture.
            </summary>
            <param name="path">The path.</param>
            <returns>
              <c>true</c> if the specified path is picture; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MediaInfo.FileNameExtensions.IsLastFmStream(System.String)">
            <summary>
            Determines whether is LastFM stream.
            </summary>
            <param name="path">The path.</param>
            <returns>
              <c>true</c> if the specified path is LastFM stream; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MediaInfo.FileNameExtensions.IsNetwork(System.String)">
            <summary>
            Determines whether specified path is network path.
            </summary>
            <param name="path">The path.</param>
            <returns>
              <c>true</c> if the specified path is network path; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MediaInfo.FileNameExtensions.GetDriveType(System.String)">
            <summary>
            Gets the type of the drive.
            </summary>
            <param name="drive">The drive.</param>
            <returns>Returns drive type.
            <b>0</b> - undefined
            <b>2</b> - removable drive (Flash, Floppy)
            <b>3</b> - fixed drive (HDD)
            <b>4</b> - remote drive (network share)
            <b>5</b> - CD/DVD drive
            <b>6</b> - RAM disk drive
            </returns>
        </member>
        <member name="M:MediaInfo.FileNameExtensions.IsUncNetwork(System.String)">
            <summary>
            Determines whether the specified string path is UNC network.
            </summary>
            <param name="strPath">The string path.</param>
            <returns>
              <c>true</c> if the specified string path is UNC network; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MediaInfo.FileNameExtensions.IsRtmp(System.String)">
            <summary>
            Determines whether the specified string path is RTMP stream.
            </summary>
            <param name="strPath">The string path.</param>
            <returns>
              <c>true</c> if the specified string path is RTMP stream; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MediaInfo.FileNameExtensions.IsMms(System.String)">
            <summary>
            Determines whether the specified string path is MMS stream.
            </summary>
            <param name="strPath">The string path.</param>
            <returns>
              <c>true</c> if the specified string path is MMS stream; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MediaInfo.FileNameExtensions.IsAvStream(System.String)">
            <summary>
            Determines whether the specified string path is A/V stream.
            </summary>
            <param name="strPath">The string path.</param>
            <returns>
              <c>true</c> if the specified string path is A/V stream; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MediaInfo.FileNameExtensions.IsRemoteUrl(System.String)">
            <summary>
            Determines whether the specified string path is remote URL.
            </summary>
            <param name="strPath">The string path.</param>
            <returns>
              <c>true</c> if the specified string path is remote URL; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MediaInfo.FileNameExtensions.IsAudio(System.String)">
            <summary>
            Determines whether specified path is audio.
            </summary>
            <param name="path">The path.</param>
            <returns>
              <c>true</c> if the specified path is audio; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:MediaInfo.GlobalMemory">
            <summary>
            Describes methods to work with unmanaged Global memory block
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:MediaInfo.GlobalMemory.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:MediaInfo.GlobalMemory"/> class.
            </summary>
            <param name="handle">The handle.</param>
        </member>
        <member name="M:MediaInfo.GlobalMemory.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:MediaInfo.GlobalMemory"/> class.
            </summary>
        </member>
        <member name="P:MediaInfo.GlobalMemory.Handle">
            <summary>
            Gets the handle.
            </summary>
            <value>
            The handle.
            </value>
        </member>
        <member name="M:MediaInfo.GlobalMemory.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:MediaInfo.GlobalMemory.StringToGlobalAnsi(System.String)">
            <summary>
            Strings to global ANSI string.
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="T:MediaInfo.LogLevel">
            <summary>Values that represent log levels.</summary>
        </member>
        <member name="F:MediaInfo.LogLevel.Verbose">
            <summary>
            The verbose level
            </summary>
        </member>
        <member name="F:MediaInfo.LogLevel.Debug">
            <summary>
            The debug level
            </summary>
        </member>
        <member name="F:MediaInfo.LogLevel.Information">
            <summary>
            The information level
            </summary>
        </member>
        <member name="F:MediaInfo.LogLevel.Warning">
            <summary>
            The warning level
            </summary>
        </member>
        <member name="F:MediaInfo.LogLevel.Error">
            <summary>
            The error level
            </summary>
        </member>
        <member name="F:MediaInfo.LogLevel.Critical">
            <summary>
            The critical error level
            </summary>
        </member>
        <member name="T:MediaInfo.ILogger">
            <summary>Interface for logger.</summary>
        </member>
        <member name="M:MediaInfo.ILogger.Log(MediaInfo.LogLevel,System.String,System.Object[])">
            <summary>Logs message.</summary>
            <param name="loglevel">The log level.</param>
            <param name="message">The message.</param>
            <param name="parameters">A variable-length parameters list containing message parameters.</param>
        </member>
        <member name="T:MediaInfo.LanguageHelper">
            <summary>
            Describes methods to manipulate language data
            </summary>
        </member>
        <member name="M:MediaInfo.LanguageHelper.GetLanguageByLcid(System.Int32)">
            <summary>
            Gets the language by LCID.
            </summary>
            <param name="lcid">The LCID.</param>
            <returns>Returns language name</returns>
        </member>
        <member name="M:MediaInfo.LanguageHelper.GetLanguageByShortName(System.String)">
            <summary>
            Gets language by the short language name.
            </summary>
            <param name="source">The short language name.</param>
            <returns>Returns language name.</returns>
        </member>
        <member name="M:MediaInfo.LanguageHelper.GetLcidByShortName(System.String)">
            <summary>
            Gets LCID by short language name.
            </summary>
            <param name="source">The short language.</param>
            <returns>Returns LCID.</returns>
        </member>
        <member name="T:MediaInfo.LogExtensions">
            <summary>A log extensions.</summary>
        </member>
        <member name="M:MediaInfo.LogExtensions.LogVerbose(MediaInfo.ILogger,System.String,System.Object[])">
            <summary>Logs a verbose message.</summary>
            <param name="logger">The logger instance.</param>
            <param name="message">The message.</param>
            <param name="parameters">A variable-length parameters list containing message parameters.</param>
        </member>
        <member name="M:MediaInfo.LogExtensions.LogDebug(MediaInfo.ILogger,System.String,System.Object[])">
            <summary>Logs a debug message.</summary>
            <param name="logger">The logger instance.</param>
            <param name="message">The message.</param>
            <param name="parameters">A variable-length parameters list containing message parameters.</param>
        </member>
        <member name="M:MediaInfo.LogExtensions.LogInformation(MediaInfo.ILogger,System.String,System.Object[])">
            <summary>Logs a information message.</summary>
            <param name="logger">The logger instance.</param>
            <param name="message">The message.</param>
            <param name="parameters">A variable-length parameters list containing message parameters.</param>
        </member>
        <member name="M:MediaInfo.LogExtensions.LogWarning(MediaInfo.ILogger,System.String,System.Object[])">
            <summary>Logs a warning message.</summary>
            <param name="logger">The logger instance.</param>
            <param name="message">The message.</param>
            <param name="parameters">A variable-length parameters list containing message parameters.</param>
        </member>
        <member name="M:MediaInfo.LogExtensions.LogError(MediaInfo.ILogger,System.String,System.Object[])">
            <summary>Logs a error message.</summary>
            <param name="logger">The logger instance.</param>
            <param name="message">The message.</param>
            <param name="parameters">A variable-length parameters list containing message parameters.</param>
        </member>
        <member name="M:MediaInfo.LogExtensions.LogError(MediaInfo.ILogger,System.Exception,System.String,System.Object[])">
            <summary>Logs a error message.</summary>
            <param name="logger">The logger instance.</param>
            <param name="exception">The source exception object.</param>
            <param name="message">The message.</param>
            <param name="parameters">A variable-length parameters list containing message parameters.</param>
        </member>
        <member name="M:MediaInfo.LogExtensions.LogCritical(MediaInfo.ILogger,System.String,System.Object[])">
            <summary>Logs a critical message.</summary>
            <param name="logger">The logger instance.</param>
            <param name="message">The message.</param>
            <param name="parameters">A variable-length parameters list containing message parameters.</param>
        </member>
        <member name="M:MediaInfo.LogExtensions.LogCritical(MediaInfo.ILogger,System.Exception,System.String,System.Object[])">
            <summary>Logs a critical message.</summary>
            <param name="logger">The logger instance.</param>
            <param name="exception">The source exception object.</param>
            <param name="message">The message.</param>
            <param name="parameters">A variable-length parameters list containing message parameters.</param>
        </member>
        <member name="T:MediaInfo.StreamKind">
            <summary>
            Describes kind of streams
            </summary>
        </member>
        <member name="F:MediaInfo.StreamKind.General">
            <summary>
            The general (container, disk info)
            </summary>
        </member>
        <member name="F:MediaInfo.StreamKind.Video">
            <summary>
            The video
            </summary>
        </member>
        <member name="F:MediaInfo.StreamKind.Audio">
            <summary>
            The audio
            </summary>
        </member>
        <member name="F:MediaInfo.StreamKind.Text">
            <summary>
            The subtitles and text information
            </summary>
        </member>
        <member name="F:MediaInfo.StreamKind.Other">
            <summary>
            The other (chapters)
            </summary>
        </member>
        <member name="F:MediaInfo.StreamKind.Image">
            <summary>
            The image
            </summary>
        </member>
        <member name="F:MediaInfo.StreamKind.Menu">
            <summary>
            The menu
            </summary>
        </member>
        <member name="T:MediaInfo.MediaInfo">
            <summary>
            Describes low-level functions to access to media information
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:MediaInfo.MediaInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MediaInfo.MediaInfo"/> class.
            </summary>
        </member>
        <member name="M:MediaInfo.MediaInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MediaInfo.MediaInfo"/> class.
            </summary>
            <param name="pathToDll">The path to mediainfo.dll.</param>
        </member>
        <member name="M:MediaInfo.MediaInfo.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:MediaInfo.MediaInfo"/> class.
            </summary>
        </member>
        <member name="M:MediaInfo.MediaInfo.Open(System.String)">
            <summary>
            Opens the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>Return internal handle to access to low-level functions.</returns>
        </member>
        <member name="P:MediaInfo.MediaInfo.Handle">
            <summary>
            Gets the library handle.
            </summary>
            <value>The library handle.</value>
        </member>
        <member name="M:MediaInfo.MediaInfo.OpenBufferInit(System.Int64,System.Int64)">
            <summary>
            Opens the buffer initialize.
            </summary>
            <param name="fileSize">Size of the file.</param>
            <param name="fileOffset">The file offset.</param>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfo.OpenBufferContinue(System.IntPtr,System.IntPtr)">
            <summary>
            Opens the buffer continue.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="bufferSize">Size of the buffer.</param>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfo.OpenBufferContinueGoToGet">
            <summary>
            Opens the buffer continue go to get.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfo.OpenBufferFinalize">
            <summary>
            Opens the buffer finalize.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfo.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:MediaInfo.MediaInfo.Inform">
            <summary>
            Informs media stream data.
            </summary>
            <returns>Returns media informs in case library loaded successfully; elsewhere will return Unable to load MediaInfo library.</returns>
        </member>
        <member name="M:MediaInfo.MediaInfo.Get(MediaInfo.StreamKind,System.Int32,System.String,MediaInfo.InfoKind,MediaInfo.InfoKind)">
            <summary>
            Gets property value by specified stream kind and name.
            </summary>
            <param name="streamKind">Kind of the stream.</param>
            <param name="streamNumber">The stream number.</param>
            <param name="parameter">The parameter.</param>
            <param name="kindOfInfo">The kind of information.</param>
            <param name="kindOfSearch">The kind of search.</param>
            <returns>Returns property value</returns>
        </member>
        <member name="M:MediaInfo.MediaInfo.Option(System.String,System.String)">
            <summary>
            Sets value to specified option name.
            </summary>
            <param name="option">The option name.</param>
            <param name="value">The option value.</param>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfo.StateGet">
            <summary>
            Gets the state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfo.CountGet(MediaInfo.StreamKind,System.Int32)">
            <summary>
            Gets count items of the specified stream.
            </summary>
            <param name="streamKind">Kind of the stream.</param>
            <param name="streamNumber">The stream number.</param>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfo.Get(MediaInfo.StreamKind,System.Int32,System.String)">
            <summary>
            Gets the specified parameter value in the stream by parameter name.
            </summary>
            <param name="streamKind">Kind of the stream.</param>
            <param name="streamNumber">The stream number.</param>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfo.Get(MediaInfo.StreamKind,System.Int32,System.Int32)">
            <summary>
            Gets the specified parameter value in the stream by parameter index.
            </summary>
            <param name="streamKind">Kind of the stream.</param>
            <param name="streamNumber">The stream number.</param>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfo.Option(System.String)">
            <summary>
            Gets options value by the specified option name.
            </summary>
            <param name="option">The option.</param>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfo.CountGet(MediaInfo.StreamKind)">
            <summary>
            Gets count of specified kind of streams.
            </summary>
            <param name="streamKind">Kind of the streams.</param>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfo.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:MediaInfo.MediaInfo.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:MediaInfo.MediaInfoList">
            <summary>
            Describes low-level function to access to mediaInfo lists
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:MediaInfo.MediaInfoList.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MediaInfo.MediaInfoList"/> class.
            </summary>
        </member>
        <member name="M:MediaInfo.MediaInfoList.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:MediaInfo.MediaInfoList"/> class.
            </summary>
        </member>
        <member name="M:MediaInfo.MediaInfoList.Open(System.String,MediaInfo.InfoFileOptions)">
            <summary>
            Opens the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="options">The options.</param>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfoList.Close(System.Int32)">
            <summary>
            Closes the specified file position.
            </summary>
            <param name="filePos">The file position.</param>
        </member>
        <member name="M:MediaInfo.MediaInfoList.Inform(System.Int32)">
            <summary>
            Informs the specified file position.
            </summary>
            <param name="filePos">The file position.</param>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfoList.Get(System.Int32,MediaInfo.StreamKind,System.Int32,System.String,MediaInfo.InfoKind,MediaInfo.InfoKind)">
            <summary>
            Gets the property value in specified file position by stream and property name.
            </summary>
            <param name="filePos">The file position.</param>
            <param name="streamKind">Kind of the stream.</param>
            <param name="streamNumber">The stream number.</param>
            <param name="parameter">The property name.</param>
            <param name="kindOfInfo">The kind of information.</param>
            <param name="kindOfSearch">The kind of search.</param>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfoList.Get(System.Int32,MediaInfo.StreamKind,System.Int32,System.Int32,MediaInfo.InfoKind)">
            <summary>
            Gets the property value in specified file position by stream and property index.
            </summary>
            <param name="filePos">The file position.</param>
            <param name="streamKind">Kind of the stream.</param>
            <param name="streamNumber">The stream number.</param>
            <param name="parameter">The property index.</param>
            <param name="kindOfInfo">The kind of information.</param>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfoList.Option(System.String,System.String)">
            <summary>
            Sets options value by the specified option name.
            </summary>
            <param name="option">The option name.</param>
            <param name="value">The option value.</param>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfoList.StateGet">
            <summary>
            Gets current state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfoList.CountGet(System.Int32,MediaInfo.StreamKind,System.Int32)">
            <summary>
            Gets count of items in file position and stream.
            </summary>
            <param name="filePos">The file position.</param>
            <param name="streamKind">Kind of the stream.</param>
            <param name="streamNumber">The stream number.</param>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfoList.Open(System.String)">
            <summary>
            Opens the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:MediaInfo.MediaInfoList.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:MediaInfo.MediaInfoList.Get(System.Int32,MediaInfo.StreamKind,System.Int32,System.String,MediaInfo.InfoKind)">
            <summary>
            Gets the specified file position.
            </summary>
            <param name="filePos">The file position.</param>
            <param name="streamKind">Kind of the stream.</param>
            <param name="streamNumber">The stream number.</param>
            <param name="parameter">The parameter.</param>
            <param name="kindOfInfo">The kind of information.</param>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfoList.Get(System.Int32,MediaInfo.StreamKind,System.Int32,System.String)">
            <summary>
            Gets the specified file position.
            </summary>
            <param name="filePos">The file position.</param>
            <param name="streamKind">Kind of the stream.</param>
            <param name="streamNumber">The stream number.</param>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfoList.Get(System.Int32,MediaInfo.StreamKind,System.Int32,System.Int32)">
            <summary>
            Gets the specified file position.
            </summary>
            <param name="filePos">The file position.</param>
            <param name="streamKind">Kind of the stream.</param>
            <param name="streamNumber">The stream number.</param>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfoList.Option(System.String)">
            <summary>
            Gets options value by the specified option name.
            </summary>
            <param name="option">The option name.</param>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfoList.CountGet(System.Int32,MediaInfo.StreamKind)">
            <summary>
            Gets count of specified kind of stream in th file position.
            </summary>
            <param name="filePos">The file position.</param>
            <param name="streamKind">Kind of the streams.</param>
            <returns></returns>
        </member>
        <member name="M:MediaInfo.MediaInfoList.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:MediaInfo.MediaInfoList.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:MediaInfo.MediaInfoEventArgs">
            <summary>
            Describes media info event argument.
            Implements the <see cref="T:System.EventArgs" />
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="M:MediaInfo.MediaInfoEventArgs.#ctor(MediaInfo.MediaInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:MediaInfo.MediaInfoEventArgs"/> class.
            </summary>
            <param name="mediaInfo">The media information.</param>
        </member>
        <member name="P:MediaInfo.MediaInfoEventArgs.MediaInfo">
            <summary>
            Gets the media information.
            </summary>
        </member>
        <member name="T:MediaInfo.MediaInfoWrapper">
            <summary>
            Describes method and properties to retrieve information from media source
            </summary>
        </member>
        <member name="M:MediaInfo.MediaInfoWrapper.#ctor(System.String,MediaInfo.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:MediaInfo.MediaInfoWrapper"/> class.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="logger">The logger instance.</param>
        </member>
        <member name="M:MediaInfo.MediaInfoWrapper.#ctor(System.String,System.String,MediaInfo.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:MediaInfo.MediaInfoWrapper"/> class.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="pathToDll">The path to DLL.</param>
            <param name="logger">the logger instance.</param>
        </member>
        <member name="M:MediaInfo.MediaInfoWrapper.WriteInfo">
            <summary>
            Writes the media information data to log.
            </summary>
        </member>
        <member name="M:MediaInfo.MediaInfoWrapper.SetupPropertiesDefault">
            <summary>
            Sets the properties default values in case media was not loaded.
            </summary>
        </member>
        <member name="M:MediaInfo.MediaInfoWrapper.OnSetupProperties(MediaInfo.MediaInfo)">
            <summary>
            Rise event in case the properties values was set.
            </summary>
        </member>
        <member name="M:MediaInfo.MediaInfoWrapper.SetupProperties(MediaInfo.MediaInfo)">
            <summary>
            Sets the properties values in case media was loaded successfully.
            </summary>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.HasVideo">
            <summary>
            Gets a value indicating whether this instance has video.
            </summary>
            <value>
              <c>true</c> if this instance has video; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.Is3D">
            <summary>
            Gets a value indicating whether media has at least one video stream with stereoscopic effect.
            </summary>
            <value>
              <c>true</c> if is3d; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.IsHdr">
            <summary>
            Gets a value indicating whether media has at least one video stream with HDR effect.
            </summary>
            <value>
              <c>true</c> if video stream with HDR effect; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.VideoStreams">
            <summary>
            Gets the video streams.
            </summary>
            <value>
            The video streams.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.BestVideoStream">
            <summary>
            Gets the best video stream.
            </summary>
            <value>
            The best video stream.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.VideoCodec">
            <summary>
            Gets the video codec.
            </summary>
            <value>
            The video codec.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.Framerate">
            <summary>
            Gets the video frame rate.
            </summary>
            <value>
            The video frame rate.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.Width">
            <summary>
            Gets the video width.
            </summary>
            <value>
            The video width.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.Height">
            <summary>
            Gets the video height.
            </summary>
            <value>
            The video height.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.AspectRatio">
            <summary>
            Gets the video aspect ratio.
            </summary>
            <value>
            The video aspect ratio.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.ScanType">
            <summary>
            Gets the type of the scan.
            </summary>
            <value>
            The type of the scan.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.IsInterlaced">
            <summary>
            Gets a value indicating whether video is interlaced.
            </summary>
            <value>
              <c>true</c> if video is interlaced; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.VideoResolution">
            <summary>
            Gets the video resolution.
            </summary>
            <value>
            The video resolution.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.VideoRate">
            <summary>
            Gets the video bitrate.
            </summary>
            <value>
            The video bitrate.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.AudioStreams">
            <summary>
            Gets the audio streams.
            </summary>
            <value>
            The audio streams.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.BestAudioStream">
            <summary>
            Gets the best audio stream.
            </summary>
            <value>
            The best audio stream.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.AudioCodec">
            <summary>
            Gets the audio codec.
            </summary>
            <value>
            The audio codec.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.AudioRate">
            <summary>
            Gets the audio bitrate.
            </summary>
            <value>
            The audio bitrate.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.AudioSampleRate">
            <summary>
            Gets the audio sample rate.
            </summary>
            <value>
            The audio sample rate.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.AudioChannels">
            <summary>
            Gets the count of audio channels.
            </summary>
            <value>
            The count of audio channels.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.AudioChannelsFriendly">
            <summary>
            Gets the audio channels friendly name.
            </summary>
            <value>
            The audio channels friendly name.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.Subtitles">
            <summary>
            Gets the list of media subtitles.
            </summary>
            <value>
            The media subtitles.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.HasSubtitles">
            <summary>
            Gets a value indicating whether media has internal or external subtitles.
            </summary>
            <value>
              <c>true</c> if media has subtitles; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.HasExternalSubtitles">
            <summary>
            Gets a value indicating whether this instance has external subtitles.
            </summary>
            <value>
              <c>true</c> if this instance has external subtitles; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.Chapters">
            <summary>
            Gets the media chapters.
            </summary>
            <value>
            The media chapters.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.HasChapters">
            <summary>
            Gets a value indicating whether media has chapters.
            </summary>
            <value>
              <c>true</c> if media has chapters; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.MenuStreams">
            <summary>
            Gets the menu streams from media.
            </summary>
            <value>
            The menu streams.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.HasMenu">
            <summary>
            Gets a value indicating whether media has menu.
            </summary>
            <value>
              <c>true</c> if media has menu; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.IsDvd">
            <summary>
            Gets a value indicating whether media is DVD.
            </summary>
            <value>
              <c>true</c> if media is DVD; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.Format">
            <summary>
            Gets the media (container) format.
            </summary>
            <value>The media (container) format.</value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.IsStreamable">
            <summary>
            Gets a value indicating whether media is streamable.
            </summary>
            <value><c>true</c> if media is streamable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.WritingApplication">
            <summary>
            Gets the writing media application.
            </summary>
            <value>The writing media application.</value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.WritingLibrary">
            <summary>
            Gets the writing media application.
            </summary>
            <value>The writing media application.</value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.Attachments">
            <summary>
            Gets the media attachments.
            </summary>
            <value>The media attachments.</value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.FormatVersion">
            <summary>
            Gets the media (container) format version.
            </summary>
            <value>The media (container) format version.</value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.Profile">
            <summary>
            Gets the media (container) format profile.
            </summary>
            <value>The media (container) format profile.</value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.Codec">
            <summary>
            Gets the media (container) codec.
            </summary>
            <value>The media (container) codec.</value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.IsBluRay">
            <summary>
            Gets a value indicating whether media is BluRay.
            </summary>
            <value>
              <c>true</c> if media is BluRay; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.MediaInfoNotloaded">
            <summary>
            Gets a value indicating whether media information was not loaded.
            </summary>
            <value>
              <c>true</c> if media information was not loaded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.Duration">
            <summary>
            Gets the duration of the media.
            </summary>
            <value>
            The duration of the media.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.Version">
            <summary>
            Gets the mediainfo.dll version.
            </summary>
            <value>
            The mediainfo.dll version.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.Size">
            <summary>
            Gets the media size.
            </summary>
            <value>
            The media size.
            </value>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.Tags">
            <summary>
            Gets the tags.
            </summary>
            <value>
            The tags.
            </value>
        </member>
        <member name="E:MediaInfo.MediaInfoWrapper.PropertiesInitialized">
            <summary>
            Occurs when properties initialized.
            </summary>
        </member>
        <member name="P:MediaInfo.MediaInfoWrapper.Text">
            <summary>
            Gets the text representation of the media information.
            </summary>
            <value>
            The media information text.
            </value>
        </member>
        <member name="M:MediaInfo.PathExtensions.MediaInfoExist(System.String)">
            <summary>
            Checks if mediaInfo.dll file exist.
            </summary>
            <param name="pathToDll">The path to mediaInfo.dll</param>
            <returns>Returns <b>true</b> if mediaInfo.dll is exists; elsewhere <b>false</b>.</returns>
        </member>
        <member name="T:MediaInfo.Model.AspectRatio">
            <summary>
            Describes video aspect ratio
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AspectRatio.Opaque">
            <summary>
            The opaque (1:1)
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AspectRatio.HighEndDataGraphics">
            <summary>
            The high end data graphics (5:4)
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AspectRatio.FullScreen">
            <summary>
            The full screen (4:3)
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AspectRatio.StandardSlides">
            <summary>
            The standard slides (3:3)
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AspectRatio.DigitalSlrCameras">
            <summary>
            The digital SLR cameras (3:2)
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AspectRatio.HighDefinitionTv">
            <summary>
            The High Definition TV (16:9)
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AspectRatio.WideScreenDisplay">
            <summary>
            The wide screen display (16:10)
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AspectRatio.WideScreen">
            <summary>
            The wide screen (1.85:1)
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AspectRatio.CinemaScope">
            <summary>
            The cinema scope (21:9)
            </summary>
        </member>
        <member name="T:MediaInfo.Model.AudioCodec">
            <summary>
            Defines constants for different kind of audio codecs.
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Undefined">
            <summary>
            The undefined audio codec
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.MpegLayer1">
            <summary>
            MPEG Layer 1
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.MpegLayer2">
            <summary>
            MPEG Layer 2
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.MpegLayer3">
            <summary>
            MPEG Layer 3
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.PcmIntBig">
            <summary>
            PCM big-endian int
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.PcmIntLit">
            <summary>
            PCM little-endian int
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.PcmFloatIeee">
            <summary>
            PCM float IEEE
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Ac3">
            <summary>
            Dolby Digital
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Ac3Atmos">
            <summary>
            Dolby Digital with Dolby Atmos
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Ac3Bsid9">
            <summary>
            DolbyNet
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Ac3Bsid10">
            <summary>
            DolbyNet
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Eac3">
            <summary>
            Dolby Digital Plus
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Eac3Atmos">
            <summary>
            Dolby Digital Plus with Dolby Atmos
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Truehd">
            <summary>
            Dolby TrueHD
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.TruehdAtmos">
            <summary>
            Dolby TrueHD with Dolby Atmos
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Dts">
            <summary>
            DTS
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.DtsX">
            <summary>
            DTS:X
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.DtsHdMa">
            <summary>
            DTS-HD MA
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.DtsExpress">
            <summary>
            DTS Express
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.DtsHdHra">
            <summary>
            DTS-HD HRA
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.DtsHd">
            <summary>
            DTS-HD 96/24
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.DtsEs">
            <summary>
            DTS-ES
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Flac">
            <summary>
            Free Lossless Audio Codec
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Opus">
            <summary>
            OPUS
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Tta1">
            <summary>
            True Audio
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Vorbis">
            <summary>
            VORBIS
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.WavPack4">
            <summary>
            WavPack v4
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.WavPack">
            <summary>
            WavPack
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Wave">
            <summary>
            Waveform Audio
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Wave64">
            <summary>
            Waveform Audio
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Real14_4">
            <summary>
            The Real Audio
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Real28_8">
            <summary>
            The Real Audio
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Real10">
            <summary>
            The RealAudio Lossless (RealAudio 10)
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.RealCook">
            <summary>
            The Real Audio
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.RealSipr">
            <summary>
            The Real Audio
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.RealRalf">
            <summary>
            The Real Audio
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.RealAtrc">
            <summary>
            The Real Audio
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Mlp">
            <summary>
            Meridian Lossless
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Aac">
            <summary>
            Advanced Audio Coding
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.AacMpeg2Main">
            <summary>
            Advanced Audio Coding
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.AacMpeg2Lc">
            <summary>
            Advanced Audio Coding
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.AacMpeg2LcSbr">
            <summary>
            Advanced Audio Coding
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.AacMpeg2Ssr">
            <summary>
            Advanced Audio Coding
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.AacMpeg4Main">
            <summary>
            Advanced Audio Coding
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.AacMpeg4Lc">
            <summary>
            Advanced Audio Coding
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.AacMpeg4LcSbr">
            <summary>
            Advanced Audio Coding
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.AacMpeg4LcSbrPs">
            <summary>
            Advanced Audio Coding
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.AacMpeg4Ssr">
            <summary>
            Advanced Audio Coding
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.AacMpeg4Ltp">
            <summary>
            Advanced Audio Coding
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Alac">
            <summary>
            Apple Lossless
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Ape">
            <summary>
            Monkey's Audio
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Wma1">
            <summary>
            Windows Media Audio
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Wma2">
            <summary>
            Windows Media Audio v2
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Wma3">
            <summary>
            Windows Media Audio v3
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.WmaVoice">
            <summary>
            Windows Media Audio Voice
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.WmaPro">
            <summary>
            Windows Media Audio Pro
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.WmaLossless">
            <summary>
            Windows Media Audio Lossless
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Adpcm">
            <summary>
            Adaptive differential pulse-code modulation
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Amr">
            <summary>
            Adaptive multi rate
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Atrac1">
            <summary>
            Adaptive Transform Acoustic Coding (SDDS)
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Atrac3">
            <summary>
            Adaptive Transform Acoustic Coding 3
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Atrac3Plus">
            <summary>
            ATRAC3plus
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.AtracLossless">
            <summary>
            ATRAC Advanced Lossless
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Atrac9">
            <summary>
            ATRAC9
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Dsd">
            <summary>
            Direct Stream Digital
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Mac3">
            <summary>
            MAC3
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Mac6">
            <summary>
            MAC6
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.G_723_1">
            <summary>
            G.723.1
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Truespeech">
            <summary>
            Truespeech
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.RkAudio">
            <summary>
            RK Audio
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Als">
            <summary>
            MPEG-4 Audio Lossless Coding
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Iac2">
            <summary>
            Ligos IAC2
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Mpeg3DAudio">
            <summary>
            MPEG-H 3D Audio
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Nellymoser">
            <summary>
            Nellymoser codec
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.QualcommPureVoice">
            <summary>
            The Qualcomm Pure Voice
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.QDesignMusic1">
            <summary>
            QDesign Music 1
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.QDesignMusic2">
            <summary>
            QDesign Music 2
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.Ac4">
            <summary>
            Dolby AC-4
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.DolbyE">
            <summary>
            Dolby E codec
            </summary>
        </member>
        <member name="F:MediaInfo.Model.AudioCodec.DolbyEd2">
            <summary>
            Dolby ED2
            </summary>
        </member>
        <member name="T:MediaInfo.Model.AudioStream">
            <summary>
            Provides properties and overridden methods for the analyze audio stream
            and contains information about audio stream.
            </summary>
            <seealso cref="T:MediaInfo.Model.LanguageMediaStream" />
        </member>
        <member name="P:MediaInfo.Model.AudioStream.Kind">
            <inheritdoc />
        </member>
        <member name="P:MediaInfo.Model.AudioStream.StreamKind">
            <inheritdoc />
        </member>
        <member name="P:MediaInfo.Model.AudioStream.Codec">
            <summary>
            Gets the audio codec.
            </summary>
            <value>
            The audio codec.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioStream.CodecFriendly">
            <summary>
            Gets the codec friendly name.
            </summary>
            <value>
            The codec friendly name.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioStream.Duration">
            <summary>
            Gets the stream duration.
            </summary>
            <value>
            The stream duration.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioStream.Bitrate">
            <summary>
            Gets the audio bitrate.
            </summary>
            <value>
            The audio bitrate.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioStream.Channel">
            <summary>
            Gets the audio channel amount.
            </summary>
            <value>
            The audio channel amount.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioStream.SamplingRate">
            <summary>
            Gets the audio sampling rate.
            </summary>
            <value>
            The audio sampling rate.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioStream.BitDepth">
            <summary>
            Gets the bit depth of stream.
            </summary>
            <value>
            The bit depth of stream.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioStream.BitrateMode">
            <summary>
            Gets the bitrate mode of stream.
            </summary>
            <value>
            The bitrate mode of stream.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioStream.Format">
            <summary>
            Gets the audio format.
            </summary>
            <value>
            The audio format.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioStream.CodecName">
            <summary>
            Gets the audio codec name.
            </summary>
            <value>
            The audio codec name.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioStream.CodecDescription">
            <summary>
            Gets the audio codec description.
            </summary>
            <value>
            The audio codec description.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioStream.AudioChannelsFriendly">
            <summary>
            Gets the audio channels friendly.
            </summary>
            <value>
            The audio channels friendly.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioStream.Tags">
            <summary>
            Gets the stream tags.
            </summary>
            <value>
            The stream tags.
            </value>
        </member>
        <member name="T:MediaInfo.Model.AudioTags">
            <summary>
            Describes properties of the audio tags
            </summary>
            <seealso cref="T:MediaInfo.Model.BaseTags" />
        </member>
        <member name="P:MediaInfo.Model.AudioTags.AudioDataTags">
            <summary>
            Gets or sets the audio tags.
            </summary>
            <value>
            The audio tags.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.Album">
            <summary>
            Gets the title of the album.
            </summary>
            <value>
            The title of the album.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.Track">
            <summary>
            Gets the title of the track.
            </summary>
            <value>
            The title of the track.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.SubTrack">
            <summary>
            Gets the title of the subtrack.
            </summary>
            <value>
            The title of the subtrack.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.OriginalAlbum">
            <summary>
            Gets the original album name (in case of a remake/remix).
            </summary>
            <value>
            The original album name (in case of a remake/remix).
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.OriginalTrack">
            <summary>
            Gets the original track name (in case of a remake/remix).
            </summary>
            <value>
            The original track name (in case of a remake/remix).
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.TrackPosition">
            <summary>
            Gets the number of the current track.
            </summary>
            <value>
            The number of the current track.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.TotalTracks">
            <summary>
            Gets the number of all tracks.
            </summary>
            <value>
            The number of all tracks.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.DiscNumber">
            <summary>
            Gets the number of the current part in a multi-disc album.
            </summary>
            <value>
            The number of the current part in a multi-disc album.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.TotalDiscs">
            <summary>
            Gets the number of all parts in a multi-disc album.
            </summary>
            <value>
            The number of all parts in a multi-disc album.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.Artist">
            <summary>
            Gets a person or band/collective generally considered responsible for the work : Singer, Implementor.
            </summary>
            <value>
            A person or band/collective generally considered responsible for the work : Singer, Implementor.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.AlbumArtist">
            <summary>
            Gets the album artist.
            </summary>
            <value>
            The album artist.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.ArtistUrl">
            <summary>
            Gets the official artist/performer web page.
            </summary>
            <value>
            The official artist/performer web page.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.Accompaniment">
            <summary>
            Gets the accompaniment name.
            </summary>
            <value>
            The accompaniment name.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.Composer">
            <summary>
            Gets the composer name.
            </summary>
            <value>
            The composer name.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.ComposerNationality">
            <summary>
            Gets the composer nationality.
            </summary>
            <value>
            The composer nationality.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.Arranger">
            <summary>
            Gets the arranger name.
            </summary>
            <value>
            The arranger name.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.Lyricist">
            <summary>
            Gets the lyricist name.
            </summary>
            <value>
            The lyricist name.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.Conductor">
            <summary>
            Gets the conductor name.
            </summary>
            <value>
            The conductor name.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.SoundEngineer">
            <summary>
            Gets the sound engineer name.
            </summary>
            <value>
            The sound engineer name.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.MasteredBy">
            <summary>
            Gets who mastered track.
            </summary>
            <value>
            Who mastered track.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.RemixedBy">
            <summary>
            Gets who remixed track.
            </summary>
            <value>
            Who remixed track.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.Label">
            <summary>
            Gets the label name.
            </summary>
            <value>
            The label name.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.RecordedDate">
            <summary>
            Gets the recorded date.
            </summary>
            <value>
            The recorded date.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.Genre">
            <summary>
            Gets the genre.
            </summary>
            <value>
            The genre.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.Mood">
            <summary>
            Gets the mood.
            </summary>
            <value>
            The mood.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.Isrc">
            <summary>
            Gets the track ISRC.
            </summary>
            <value>
            The track ISRC.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.BarCode">
            <summary>
            Gets the bar code.
            </summary>
            <value>
            The bar code.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.Lccn">
            <summary>
            Gets the LCCN.
            </summary>
            <value>
            The LCCN.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.CatalogNumber">
            <summary>
            Gets the catalog number.
            </summary>
            <value>
            The catalog number.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.LabelCode">
            <summary>
            Gets the label code.
            </summary>
            <value>
            The label code.
            </value>
        </member>
        <member name="P:MediaInfo.Model.AudioTags.EncodedBy">
            <summary>
            Gets the name of the person or organization that encoded/ripped the audio file.
            </summary>
            <value>
            The name of the person or organization that encoded/ripped the audio file.
            </value>
        </member>
        <member name="T:MediaInfo.Model.BaseTags">
            <summary>
            Base class to read tags from stream
            </summary>
        </member>
        <member name="P:MediaInfo.Model.BaseTags.GeneralTags">
            <summary>
            Gets or sets the general tags.
            </summary>
            <value>
            The general tags.
            </value>
        </member>
        <member name="P:MediaInfo.Model.BaseTags.Title">
            <summary>
            Gets the title of the media.
            </summary>
            <value>
            The title of the media.
            </value>
        </member>
        <member name="P:MediaInfo.Model.BaseTags.Description">
            <summary>
            Gets a short description of the contents, such as "Two birds flying".
            </summary>
            <value>
            A short description of the contents, such as "Two birds flying".
            </value>
        </member>
        <member name="P:MediaInfo.Model.BaseTags.Keywords">
            <summary>
            Gets the keywords to the item separated by a comma, used for searching.
            </summary>
            <value>
            The keywords to the item separated by a comma, used for searching.
            </value>
        </member>
        <member name="P:MediaInfo.Model.BaseTags.Country">
            <summary>
            Gets the country.
            </summary>
            <value>
            The country.
            </value>
        </member>
        <member name="P:MediaInfo.Model.BaseTags.ReleasedDate">
            <summary>
            Gets the time that the item was originally released.
            </summary>
            <value>
            The time that the item was originally released.
            </value>
        </member>
        <member name="P:MediaInfo.Model.BaseTags.EncodedDate">
            <summary>
            Gets the time that the encoding of this item was completed began.
            </summary>
            <value>
            The time that the encoding of this item was completed began.
            </value>
        </member>
        <member name="P:MediaInfo.Model.BaseTags.TaggedDate">
            <summary>
            Gets the time that the tags were done for this item.
            </summary>
            <value>
            The time that the tags were done for this item.
            </value>
        </member>
        <member name="P:MediaInfo.Model.BaseTags.Comment">
            <summary>
            Gets any comment related to the content.
            </summary>
            <value>
            Any comment related to the content.
            </value>
        </member>
        <member name="P:MediaInfo.Model.BaseTags.Rating">
            <summary>
            Gets a numeric value defining how much a person likes the song/movie. The number is between 0 and 5 with decimal values possible (e.g. 2.7), 5(.0) being the highest possible rating.
            </summary>
            <value>
            a numeric value defining how much a person likes the song/movie. The number is between 0 and 5 with decimal values possible (e.g. 2.7), 5(.0) being the highest possible rating.
            </value>
        </member>
        <member name="P:MediaInfo.Model.BaseTags.Copyright">
            <summary>
            Gets the copyright attribution.
            </summary>
            <value>
            The copyright attribution.
            </value>
        </member>
        <member name="P:MediaInfo.Model.BaseTags.Publisher">
            <summary>
            Gets the name of the organization producing the track (i.e. the 'record label').
            </summary>
            <value>
            The name of the organization producing the track (i.e. the 'record label').
            </value>
        </member>
        <member name="P:MediaInfo.Model.BaseTags.PublisherUrl">
            <summary>
            Gets the publishers official web page.
            </summary>
            <value>
            The publishers official web page.
            </value>
        </member>
        <member name="P:MediaInfo.Model.BaseTags.DistributedBy">
            <summary>
            Gets the name of the organization distributing track.
            </summary>
            <value>
            The name of the organization distributing track.
            </value>
        </member>
        <member name="P:MediaInfo.Model.BaseTags.Bpm">
            <summary>
            Gets the average number of beats per minute in the complete target.
            </summary>
            <value>
            The average number of beats per minute in the complete target.
            </value>
        </member>
        <member name="P:MediaInfo.Model.BaseTags.Covers">
            <summary>
            Gets the cover media.
            </summary>
            <value>
            The cover media.
            </value>
        </member>
        <member name="T:MediaInfo.Model.CoverInfo">
            <summary>
            Describes properties of the cover tags
            </summary>
        </member>
        <member name="P:MediaInfo.Model.CoverInfo.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:MediaInfo.Model.CoverInfo"/> is exists.
            </summary>
            <value>
            <c>true</c> if exists; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MediaInfo.Model.CoverInfo.Description">
            <summary>
            Gets the description of the cover.
            </summary>
            <value>
            The description of the cover.
            </value>
        </member>
        <member name="P:MediaInfo.Model.CoverInfo.Type">
            <summary>
            Gets the type of the cover.
            </summary>
            <value>
            The type of the cover.
            </value>
        </member>
        <member name="P:MediaInfo.Model.CoverInfo.Mime">
            <summary>
            Gets the MIME of the cover.
            </summary>
            <value>
            The MIME of the cover.
            </value>
        </member>
        <member name="P:MediaInfo.Model.CoverInfo.Data">
            <summary>
            Gets the cover data.
            </summary>
            <value>
            The cover data.
            </value>
        </member>
        <member name="T:MediaInfo.Model.BitrateMode">
            <summary>
            Describes bitrate possible modes
            </summary>
        </member>
        <member name="F:MediaInfo.Model.BitrateMode.Cq">
            <summary>
            Constant quality mode
            </summary>
        </member>
        <member name="F:MediaInfo.Model.BitrateMode.Cbr">
            <summary>
            Constant bitrate mode
            </summary>
        </member>
        <member name="F:MediaInfo.Model.BitrateMode.Vbr">
            <summary>
            Variable bitrate mode
            </summary>
        </member>
        <member name="T:MediaInfo.Model.ChapterStream">
            <summary>
            Provides properties and overridden methods for the analyze chapter in media
            and contains information about chapter.
            </summary>
            <seealso cref="T:MediaInfo.Model.MediaStream" />
        </member>
        <member name="M:MediaInfo.Model.ChapterStream.#ctor(System.Double,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MediaInfo.Model.ChapterStream"/> class.
            </summary>
            <param name="offset">The offset.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:MediaInfo.Model.ChapterStream.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MediaInfo.Model.ChapterStream"/> class.
            </summary>
        </member>
        <member name="P:MediaInfo.Model.ChapterStream.Kind">
            <inheritdoc />
        </member>
        <member name="P:MediaInfo.Model.ChapterStream.StreamKind">
            <inheritdoc />
        </member>
        <member name="P:MediaInfo.Model.ChapterStream.Offset">
            <summary>
            Gets the chapter offset.
            </summary>
            <value>
            The chapter offset.
            </value>
        </member>
        <member name="P:MediaInfo.Model.ChapterStream.Description">
            <summary>
            Gets the chapter description.
            </summary>
            <value>
            The chapter description.
            </value>
        </member>
        <member name="T:MediaInfo.Model.ChromaSubSampling">
            <summary>
            Describes video chroma sub sampling
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ChromaSubSampling.Sampling332">
            <summary>
            3:3:2
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ChromaSubSampling.Sampling410">
            <summary>
            4:1:0
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ChromaSubSampling.Sampling411">
            <summary>
            4:1:1
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ChromaSubSampling.Sampling420">
            <summary>
            4:2:0
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ChromaSubSampling.Sampling422">
            <summary>
            4:2:2
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ChromaSubSampling.Sampling444">
            <summary>
            4:4:4
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ChromaSubSampling.Sampling4444">
            <summary>
            4:4:4:4
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ChromaSubSampling.Sampling555">
            <summary>
            5:5:5
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ChromaSubSampling.Sampling565">
            <summary>
            5:6:5
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ChromaSubSampling.Sampling888">
            <summary>
            8:8:8
            </summary>
        </member>
        <member name="T:MediaInfo.Model.ColorSpace">
            <summary>
            Describes video color space
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ColorSpace.Generic">
            <summary>
            Generic film
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ColorSpace.PrintingDensity">
            <summary>
            Printing density
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ColorSpace.NTSC">
            <summary>
            BT.601 NTSC
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ColorSpace.PAL">
            <summary>
            BT.601 PAL
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ColorSpace.ADX">
            <summary>
            ADX
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ColorSpace.BT470M">
            <summary>
            BT.470 System M
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ColorSpace.BT470BG">
            <summary>
            BT.470 System B/G
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ColorSpace.BT601">
            <summary>
            BT.601 PAL or NTSC
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ColorSpace.BT709">
            <summary>
            BT.709
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ColorSpace.BT1361">
            <summary>
            BT.1361
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ColorSpace.BT2020">
            <summary>
            BT.2020 (10 bit or 12 bit)
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ColorSpace.BT2100">
            <summary>
            BT.2100
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ColorSpace.EBUTech3213">
            <summary>
            EBU Tech 3213
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ColorSpace.SMPTE240M">
            <summary>
            SMPTE 240M
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ColorSpace.SMPTE274M">
            <summary>
            SMPTE 274M
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ColorSpace.SMPTE428M">
            <summary>
            SMPTE 428M
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ColorSpace.ACES">
            <summary>
             SMPTE ST 2065-1
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ColorSpace.XYZ">
            <summary>
            SMPTE ST 2067-40 / ISO 11664-3
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ColorSpace.DCIP3">
            <summary>
            DCI-P3
            </summary>
        </member>
        <member name="F:MediaInfo.Model.ColorSpace.DisplayP3">
            <summary>
            Display P3
            </summary>
        </member>
        <member name="T:MediaInfo.Model.Hdr">
            <summary>
            Describes HDR modes
            </summary>
        </member>
        <member name="F:MediaInfo.Model.Hdr.None">
            <summary>
            No HDR 
            </summary>
        </member>
        <member name="F:MediaInfo.Model.Hdr.HDR10">
            <summary>
            HDR10
            </summary>
        </member>
        <member name="F:MediaInfo.Model.Hdr.HDR10Plus">
            <summary>
            HDR10+
            </summary>
        </member>
        <member name="F:MediaInfo.Model.Hdr.DolbyVision">
            <summary>
            Dolby Vision
            </summary>
        </member>
        <member name="F:MediaInfo.Model.Hdr.HLG">
            <summary>
            Hybrid Log Gamma
            </summary>
        </member>
        <member name="F:MediaInfo.Model.Hdr.SLHDR1">
            <summary>
            Advanced HDR by Technicolor (SL-HDR1)
            </summary>
        </member>
        <member name="F:MediaInfo.Model.Hdr.SLHDR2">
            <summary>
            Advanced HDR by Technicolor (SL-HDR2)
            </summary>
        </member>
        <member name="F:MediaInfo.Model.Hdr.SLHDR3">
            <summary>
            Advanced HDR by Technicolor (SL-HDR3)
            </summary>
        </member>
        <member name="T:MediaInfo.Model.LanguageMediaStream">
            <summary>
            Provides properties and overridden methods for the analyze stream
            and contains information about media stream.
            </summary>
            <seealso cref="T:MediaInfo.Model.MediaStream" />
        </member>
        <member name="P:MediaInfo.Model.LanguageMediaStream.Language">
            <summary>
            Gets the media stream language.
            </summary>
            <value>
            The media stream language.
            </value>
        </member>
        <member name="P:MediaInfo.Model.LanguageMediaStream.Lcid">
            <summary>
            Gets the media stream LCID.
            </summary>
            <value>
            The media stream LCID.
            </value>
        </member>
        <member name="P:MediaInfo.Model.LanguageMediaStream.Default">
            <summary>
            Gets a value indicating whether this <see cref="T:MediaInfo.Model.LanguageMediaStream"/> is default.
            </summary>
            <value>
              <c>true</c> if default; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MediaInfo.Model.LanguageMediaStream.Forced">
            <summary>
            Gets a value indicating whether this <see cref="T:MediaInfo.Model.LanguageMediaStream"/> is forced.
            </summary>
            <value>
              <c>true</c> if forced; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MediaInfo.Model.LanguageMediaStream.StreamSize">
            <summary>
            Gets the stream size.
            </summary>
            <value>
            The stream size (bytes).
            </value>
        </member>
        <member name="T:MediaInfo.Model.MediaStreamKind">
            <summary>
            Defines constants for media stream kinds.
            </summary>
        </member>
        <member name="F:MediaInfo.Model.MediaStreamKind.Video">
            <summary>
            The video stream
            </summary>
        </member>
        <member name="F:MediaInfo.Model.MediaStreamKind.Audio">
            <summary>
            The audio stream
            </summary>
        </member>
        <member name="F:MediaInfo.Model.MediaStreamKind.Text">
            <summary>
            The subtitle stream
            </summary>
        </member>
        <member name="F:MediaInfo.Model.MediaStreamKind.Image">
            <summary>
            The image stream
            </summary>
        </member>
        <member name="F:MediaInfo.Model.MediaStreamKind.Menu">
            <summary>
            Menu
            </summary>
        </member>
        <member name="T:MediaInfo.Model.MediaStream">
            <summary>
            Provides basic properties and instance methods for the analyze stream
            and contains information about media stream.
            </summary>
            <seealso cref="T:System.MarshalByRefObject" />
        </member>
        <member name="P:MediaInfo.Model.MediaStream.Id">
            <summary>
            Gets or sets the media steam id.
            </summary>
            <value>
            The media steam id.
            </value>
        </member>
        <member name="P:MediaInfo.Model.MediaStream.Name">
            <summary>
            Gets or sets the name of stream.
            </summary>
            <value>
            The name of stream.
            </value>
        </member>
        <member name="P:MediaInfo.Model.MediaStream.Kind">
            <summary>
            Gets the kind of media stream.
            </summary>
            <value>
            The kind of media stream.
            </value>
        </member>
        <member name="P:MediaInfo.Model.MediaStream.StreamKind">
            <summary>
            Gets the kind of the stream.
            </summary>
            <value>
            The kind of the stream.
            </value>
        </member>
        <member name="P:MediaInfo.Model.MediaStream.StreamPosition">
            <summary>
            Gets the stream position.
            </summary>
            <value>
            The stream position.
            </value>
        </member>
        <member name="P:MediaInfo.Model.MediaStream.StreamNumber">
            <summary>
            Gets the logical stream number.
            </summary>
            <value>
            The logical stream number.
            </value>
        </member>
        <member name="T:MediaInfo.Model.MenuStream">
            <summary>
            Describes properties of the menu
            </summary>
            <seealso cref="T:MediaInfo.Model.MediaStream" />
        </member>
        <member name="M:MediaInfo.Model.MenuStream.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MediaInfo.Model.MenuStream"/> class.
            </summary>
        </member>
        <member name="P:MediaInfo.Model.MenuStream.Duration">
            <summary>
            Gets or sets the menu duration.
            </summary>
            <value>
            The menu duration.
            </value>
        </member>
        <member name="P:MediaInfo.Model.MenuStream.Chapters">
            <summary>
            Gets the chapters.
            </summary>
            <value>
            The chapters.
            </value>
        </member>
        <member name="P:MediaInfo.Model.MenuStream.Kind">
            <inheritdoc />
        </member>
        <member name="P:MediaInfo.Model.MenuStream.StreamKind">
            <inheritdoc />
        </member>
        <member name="T:MediaInfo.Model.Chapter">
            <summary>
            Describes properties of the menu chapter
            </summary>
        </member>
        <member name="P:MediaInfo.Model.Chapter.Position">
            <summary>
            Gets or sets the menu position.
            </summary>
            <value>
            The menu position.
            </value>
        </member>
        <member name="P:MediaInfo.Model.Chapter.Name">
            <summary>
            Gets or sets the menu chapter name.
            </summary>
            <value>
            The menu chapter name.
            </value>
        </member>
        <member name="T:MediaInfo.Model.StereoMode">
            <summary>
            Describes 3D stereo mode
            </summary>
        </member>
        <member name="F:MediaInfo.Model.StereoMode.Mono">
            <summary>
            No 3D (mono)
            </summary>
        </member>
        <member name="F:MediaInfo.Model.StereoMode.Stereo">
            <summary>
            Stereo mode without additional info
            </summary>
        </member>
        <member name="F:MediaInfo.Model.StereoMode.SideBySideLeft">
            <summary>
            The side by side left eye is first
            </summary>
        </member>
        <member name="F:MediaInfo.Model.StereoMode.TopBottomRight">
            <summary>
            The top bottom right eye is first
            </summary>
        </member>
        <member name="F:MediaInfo.Model.StereoMode.TopBottomLeft">
            <summary>
            The top bottom left eye is first
            </summary>
        </member>
        <member name="F:MediaInfo.Model.StereoMode.CheckerboardRight">
            <summary>
            The checkerboard right eye is first
            </summary>
        </member>
        <member name="F:MediaInfo.Model.StereoMode.CheckerboardLeft">
            <summary>
            The checkerboard left eye is first
            </summary>
        </member>
        <member name="F:MediaInfo.Model.StereoMode.RowInterleavedRight">
            <summary>
            The row interleaved right eye is first
            </summary>
        </member>
        <member name="F:MediaInfo.Model.StereoMode.RowInterleavedLeft">
            <summary>
            The row interleaved left eye is first
            </summary>
        </member>
        <member name="F:MediaInfo.Model.StereoMode.ColumnInterleavedRight">
            <summary>
            The column interleaved right eye is first
            </summary>
        </member>
        <member name="F:MediaInfo.Model.StereoMode.ColumnInterleavedLeft">
            <summary>
            The column interleaved left eye is first
            </summary>
        </member>
        <member name="F:MediaInfo.Model.StereoMode.AnaglyphCyanRed">
            <summary>
            The anaglyph cyan-red
            </summary>
        </member>
        <member name="F:MediaInfo.Model.StereoMode.SideBySideRight">
            <summary>
            The side by side right eye is first
            </summary>
        </member>
        <member name="F:MediaInfo.Model.StereoMode.AnaglyphGreenMagenta">
            <summary>
            The anaglyph green-magenta
            </summary>
        </member>
        <member name="F:MediaInfo.Model.StereoMode.BothEyesLacedLeft">
            <summary>
            The both eyes laced left eye is first
            </summary>
        </member>
        <member name="F:MediaInfo.Model.StereoMode.BothEyesLacedRight">
            <summary>
            The both eyes laced right eye is first
            </summary>
        </member>
        <member name="T:MediaInfo.Model.SubtitleCodec">
            <summary>
            Defines constants for different kind of subtitles.
            </summary>
        </member>
        <member name="F:MediaInfo.Model.SubtitleCodec.Undefined">
            <summary>
            The undefined type.
            </summary>
        </member>
        <member name="F:MediaInfo.Model.SubtitleCodec.Ass">
            <summary>
            The Advanced SubStation Alpha subtitles.
            </summary>
        </member>
        <member name="F:MediaInfo.Model.SubtitleCodec.ImageBmp">
            <summary>
            The BMP image subtitles.
            </summary>
        </member>
        <member name="F:MediaInfo.Model.SubtitleCodec.Ssa">
            <summary>
            The  SubStation Alpha subtitles.
            </summary>
        </member>
        <member name="F:MediaInfo.Model.SubtitleCodec.TextAss">
            <summary>
            The Advanced SubStation Alpha text subtitles.
            </summary>
        </member>
        <member name="F:MediaInfo.Model.SubtitleCodec.TextSsa">
            <summary>
            The SubStation Alpha text subtitles.
            </summary>
        </member>
        <member name="F:MediaInfo.Model.SubtitleCodec.TextUsf">
            <summary>
            The Universal Subtitle Format text subtitles.
            </summary>
        </member>
        <member name="F:MediaInfo.Model.SubtitleCodec.TextUtf8">
            <summary>
            The Unicode text subtitles.
            </summary>
        </member>
        <member name="F:MediaInfo.Model.SubtitleCodec.Usf">
            <summary>
            The Universal Subtitle Format subtitles.
            </summary>
        </member>
        <member name="F:MediaInfo.Model.SubtitleCodec.Utf8">
            <summary>
            The Unicode subtitles.
            </summary>
        </member>
        <member name="F:MediaInfo.Model.SubtitleCodec.Vobsub">
            <summary>
            The VOB SUB subtitles (DVD subtitles).
            </summary>
        </member>
        <member name="F:MediaInfo.Model.SubtitleCodec.HdmvPgs">
            <summary>
            The Presentation Grapic Stream Subtitle Format subtitles
            </summary>
        </member>
        <member name="F:MediaInfo.Model.SubtitleCodec.HdmvTextst">
            <summary>
            The HDMV Text Subtitle Format subtitles
            </summary>
        </member>
        <member name="T:MediaInfo.Model.SubtitleStream">
            <summary>
            Provides properties and overridden methods for the analyze subtitle stream
            and contains information about subtitle.
            </summary>
            <seealso cref="T:MediaInfo.Model.LanguageMediaStream" />
        </member>
        <member name="P:MediaInfo.Model.SubtitleStream.Format">
            <summary>
            Gets the subtitle format.
            </summary>
            <value>
            The subtitle format.
            </value>
        </member>
        <member name="P:MediaInfo.Model.SubtitleStream.Codec">
            <summary>
            Gets the subtitle codec.
            </summary>
            <value>
            The subtitle codec.
            </value>
        </member>
        <member name="P:MediaInfo.Model.SubtitleStream.Kind">
            <inheritdoc />
        </member>
        <member name="P:MediaInfo.Model.SubtitleStream.StreamKind">
            <inheritdoc />
        </member>
        <member name="T:MediaInfo.Model.TransferCharacteristic">
            <summary>
            Describes video transfer characteristics
            </summary>
        </member>
        <member name="F:MediaInfo.Model.TransferCharacteristic.PrintingDensity">
            <summary>
            Printing density
            </summary>
        </member>
        <member name="F:MediaInfo.Model.TransferCharacteristic.Linear">
            <summary>
            The linear transfer
            </summary>
        </member>
        <member name="F:MediaInfo.Model.TransferCharacteristic.Logarithmic">
            <summary>
            The logarithmic transfer
            </summary>
        </member>
        <member name="F:MediaInfo.Model.TransferCharacteristic.BT601NTSC">
            <summary>
            BT.601 NTSC
            </summary>
        </member>
        <member name="F:MediaInfo.Model.TransferCharacteristic.BT601PAL">
            <summary>
            BT.601 PAL
            </summary>
        </member>
        <member name="F:MediaInfo.Model.TransferCharacteristic.CompositeNTSC">
            <summary>
            Composite NTSC
            </summary>
        </member>
        <member name="F:MediaInfo.Model.TransferCharacteristic.CompositePAL">
            <summary>
            Composite PAL
            </summary>
        </member>
        <member name="F:MediaInfo.Model.TransferCharacteristic.BT709">
            <summary>
            BT.709
            </summary>
        </member>
        <member name="F:MediaInfo.Model.TransferCharacteristic.ADX">
            <summary>
            ADX
            </summary>
        </member>
        <member name="F:MediaInfo.Model.TransferCharacteristic.SMPTE274M">
            <summary>
            SMPTE 274M
            </summary>
        </member>
        <member name="F:MediaInfo.Model.TransferCharacteristic.ZLinear">
            <summary>
            Z (depth) - linear
            </summary>
        </member>
        <member name="F:MediaInfo.Model.TransferCharacteristic.ZHomogeneous">
            <summary>
            Z (depth) - homogeneous
            </summary>
        </member>
        <member name="T:MediaInfo.Model.VideoCodec">
            <summary>
            Describes type of video codecs
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Undefined">
            <summary>
            The undefined
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Uncompressed">
            <summary>
            The uncompressed
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Dirac">
            <summary>
            Dirac
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Mpeg4">
            <summary>
            MPEG4
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Mpeg4Is0Sp">
            <summary>
            MPEG4 Simple Profile
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Mpeg4Is0Asp">
            <summary>
            MPEG4 Advanced Simple Profile
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Mpeg4Is0Ap">
            <summary>
            MPEG4 Advanced Profile
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Mpeg4Is0Avc">
            <summary>
            MPEG4 AVC
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Mpeg4IsoSp">
            <summary>
            MPEG4 ISO Simple Profile
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Mpeg4IsoAsp">
            <summary>
            MPEG4 ISO Advanced Simple Profile
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Mpeg4IsoAp">
            <summary>
            MPEG4 ISO Advanced Profile
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Mpeg4IsoAvc">
            <summary>
            MPEG4 ISO AVC
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.MpeghIsoHevc">
            <summary>
            MPEG4 ISO HEVC
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Mpeg4MsV1">
            <summary>
            The Windows Media MPEG4 V1
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Mpeg4MsV2">
            <summary>
            The Windows Media MPEG4 V2
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Mpeg4MsV3">
            <summary>
            The Windows Media MPEG4 V3
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Vc1">
            <summary>
            VC1
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Mpeg1">
            <summary>
            The MPEG1
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Mpeg2">
            <summary>
            The MPEG2
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.ProRes">
            <summary>
            The ProRes
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.RealRv10">
            <summary>
            Real Video v1
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.RealRv20">
            <summary>
            Real Video v2
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.RealRv30">
            <summary>
            Real Video v3
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.RealRv40">
            <summary>
            Real Video v4
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Theora">
            <summary>
            Theora
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Vp6">
            <summary>
            TrueMotion VP6
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Vp8">
            <summary>
            VP8
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Vp9">
            <summary>
            VP9
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Divx1">
            <summary>
            DivX v1
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Divx2">
            <summary>
            DivX v2
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Divx3">
            <summary>
            DivX v3.x
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Divx4">
            <summary>
            DivX v4
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Divx50">
            <summary>
            DivX v5
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Xvid">
            <summary>
            The XVid
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Svq1">
            <summary>
            Sorenson Video v1
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Svq2">
            <summary>
            Sorenson Video v2
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Svq3">
            <summary>
            Sorenson Video v3
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Sprk">
            <summary>
            The Sorenson Spark
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.H260">
            <summary>
            H.260
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.H261">
            <summary>
            H.261
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.H263">
            <summary>
            H.263
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Avdv">
            <summary>
            AVdv
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Avd1">
            <summary>
            Autodesk Digital Video v1
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Ffv1">
            <summary>
            FF video codec 1
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Ffv2">
            <summary>
            FF video codec 2
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Iv21">
            <summary>
            IV21
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Iv30">
            <summary>
            IV30
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Iv40">
            <summary>
            IV40
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Iv50">
            <summary>
            IV50
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Ffds">
            <summary>
            The FFDShow MPEG-4 Video
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Fraps">
            <summary>
            The FFDShow MPEG-4 Video
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Ffvh">
            <summary>
            HuffYUV 2.2
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Mjpg">
            <summary>
            Motion JPEG
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Dv">
            <summary>
            Digital Video
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Hdv">
            <summary>
            Digital Video HD
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.DvcPro50">
            <summary>
            DVCPRO50
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.DvcProHd">
            <summary>
            DVCPRO HD
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Wmv1">
            <summary>
            Windows Media Video V7
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Wmv2">
            <summary>
            Windows Media Video V8
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Wmv3">
            <summary>
            Windows Media Video V9
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Q8Bps">
            <summary>
            QuickTime 8BPS
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.BinkVideo">
            <summary>
            Bink video
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.Av1">
            <summary>
            AV1
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoCodec.HuffYUV">
            <summary>
            HuffYUV
            </summary>
        </member>
        <member name="T:MediaInfo.Model.VideoStandard">
            <summary>
            Describes video standards
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoStandard.NTSC">
            <summary>
            NTSC standard
            </summary>
        </member>
        <member name="F:MediaInfo.Model.VideoStandard.PAL">
            <summary>
            PAL standard
            </summary>
        </member>
        <member name="T:MediaInfo.Model.VideoStream">
            <summary>
            Describes properties of the video stream and method to analyze stream
            </summary>
            <seealso cref="T:MediaInfo.Model.LanguageMediaStream" />
        </member>
        <member name="P:MediaInfo.Model.VideoStream.Kind">
            <inheritdoc />
        </member>
        <member name="P:MediaInfo.Model.VideoStream.StreamKind">
            <inheritdoc />
        </member>
        <member name="P:MediaInfo.Model.VideoStream.FrameRate">
            <summary>
            Gets or sets the video frame rate.
            </summary>
            <value>
            The video frame rate.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoStream.Width">
            <summary>
            Gets or sets the video width.
            </summary>
            <value>
            The video width.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoStream.Height">
            <summary>
            Gets or sets the video height.
            </summary>
            <value>
            The video height.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoStream.Bitrate">
            <summary>
            Gets or sets the video bitrate.
            </summary>
            <value>
            The video bitrate.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoStream.AspectRatio">
            <summary>
            Gets or sets the video aspect ratio.
            </summary>
            <value>
            The video aspect ratio.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoStream.Interlaced">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:MediaInfo.Model.VideoStream"/> is interlaced.
            </summary>
            <value>
              <c>true</c> if interlaced; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoStream.Stereoscopic">
            <summary>
            Gets or sets the video stereoscopic mode.
            </summary>
            <value>
            The video stereoscopic mode.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoStream.Format">
            <summary>
            Gets or sets the video format.
            </summary>
            <value>
            The video format.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoStream.Codec">
            <summary>
            Gets or sets the video codec.
            </summary>
            <value>
            The video codec.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoStream.CodecProfile">
            <summary>
            Gets or sets the video codec profile.
            </summary>
            <value>
            The video codec profile.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoStream.Standard">
            <summary>
            Gets or sets the video standard.
            </summary>
            <value>
            Possible values:
            PAL
            NTSC
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoStream.ColorSpace">
            <summary>
            Gets or sets the video color space.
            </summary>
            <value>
            The video color space.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoStream.TransferCharacteristics">
            <summary>
            Gets or sets the video transfer characteristics.
            </summary>
            <value>
            The video transfer characteristics.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoStream.SubSampling">
            <summary>
            Gets or sets the video chroma sub-sampling.
            </summary>
            <value>
            The video chroma sub-sampling.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoStream.Duration">
            <summary>
            Gets or sets the stream duration.
            </summary>
            <value>
            The stream duration.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoStream.Hdr">
            <summary>
            Gets or sets the video HDR type.
            </summary>
            <value>
            The video HDR type.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoStream.BitDepth">
            <summary>
            Gets or sets the video bit depth.
            </summary>
            <value>
            The video bit depth.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoStream.CodecName">
            <summary>
            Gets or sets the name of the video codec.
            </summary>
            <value>
            The name of the video codec.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoStream.Resolution">
            <summary>
            Gets the video resolution.
            </summary>
            <value>
            The video resolution.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoStream.Size">
            <summary>
            Gets the video size.
            </summary>
            <value>
            The video size.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoStream.Tags">
            <summary>
            Gets the video stream tags.
            </summary>
            <value>
            The video stream tags.
            </value>
        </member>
        <member name="T:MediaInfo.Model.VideoTags">
            <summary>
            Describes properties of the video tags
            </summary>
            <seealso cref="T:MediaInfo.Model.BaseTags" />
        </member>
        <member name="P:MediaInfo.Model.VideoTags.VideoDataTags">
            <summary>
            Gets or sets the video tags.
            </summary>
            <value>
            The video tags.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.Collection">
            <summary>
            Gets the title of the collection.
            </summary>
            <value>
            The title of the collection.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.Season">
            <summary>
            Gets the title of the season.
            </summary>
            <value>
            The title of the season.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.Part">
            <summary>
            Gets the title of part.
            </summary>
            <value>
            The title of part.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.Movie">
            <summary>
            Gets the title of the file for a video file.
            </summary>
            <value>
            The title of the file for a video file.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.Chapter">
            <summary>
            Gets the title of chapter.
            </summary>
            <value>
            The title of chapter.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.OriginalMovie">
            <summary>
            Gets the original movie.
            </summary>
            <value>
            The original movie.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.TrackPosition">
            <summary>
            Gets the track position.
            </summary>
            <value>
            The track position.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.Composer">
            <summary>
            Gets the composer name.
            </summary>
            <value>
            The composer name.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.ComposerNationality">
            <summary>
            Gets the composer nationality.
            </summary>
            <value>
            The composer nationality.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.Arranger">
            <summary>
            Gets the arranger name.
            </summary>
            <value>
            The arranger name.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.Lyricist">
            <summary>
            Gets the lyricist name.
            </summary>
            <value>
            The lyricist name.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.Conductor">
            <summary>
            Gets the conductor name.
            </summary>
            <value>
            The conductor name.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.SoundEngineer">
            <summary>
            Gets the sound engineer name.
            </summary>
            <value>
            The sound engineer name.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.Actor">
            <summary>
            Gets the real name of actor.
            </summary>
            <value>
            The real name of actor.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.ActorCharacter">
            <summary>
            Gets the name of the character an actor or actress plays in this movie.
            </summary>
            <value>
            The name of the character an actor or actress plays in this movie.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.WrittenBy">
            <summary>
            Gets the author of the story or script.
            </summary>
            <value>
            The author of the story or script.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.ScreenplayBy">
            <summary>
            Gets the author of the screenplay or scenario (used for movies and TV shows).
            </summary>
            <value>
            The author of the screenplay or scenario (used for movies and TV shows).
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.Director">
            <summary>
            Gets the name of the director.
            </summary>
            <value>
            The name of the director.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.AssistantDirector">
            <summary>
            Gets the name of assistant director.
            </summary>
            <value>
            The name of assistant director.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.DirectorOfPhotography">
            <summary>
            Gets the name of the director of photography, also known as cinematographer.
            </summary>
            <value>
            The name of the director of photography, also known as cinematographer.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.ArtDirector">
            <summary>
            Gets the person who oversees the artists and craftspeople who build the sets.
            </summary>
            <value>
            The person who oversees the artists and craftspeople who build the sets.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.EditedBy">
            <summary>
            Gets the editor name.
            </summary>
            <value>
            The editor name.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.Producer">
            <summary>
            Gets the name of producer the movie.
            </summary>
            <value>
            The name of producer the movie.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.CoProducer">
            <summary>
            Gets the name of co-producer.
            </summary>
            <value>
            The name of co-producer.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.ExecutiveProducer">
            <summary>
            Gets the name of executive producer.
            </summary>
            <value>
            The name of executive producer.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.ProductionDesigner">
            <summary>
            Gets the artist responsible for designing the overall visual appearance of a movie.
            </summary>
            <value>
            The artist responsible for designing the overall visual appearance of a movie.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.CostumeDesigner">
            <summary>
            Gets the name of the costume designer.
            </summary>
            <value>
            The name of the costume designer.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.Choreographer">
            <summary>
            Gets the name of the choreographer.
            </summary>
            <value>
            The name of the choreographer.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.ProductionStudio">
            <summary>
            Gets the name of production studio.
            </summary>
            <value>
            The name of production studio.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.WrittenDate">
            <summary>
            Gets the time that the composition of the music/script began.
            </summary>
            <value>
            The time that the composition of the music/script began.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.Genre">
            <summary>
            Gets the main genre of the audio or video; e.g. "classical", "ambient-house", "synthpop", "sci-fi", "drama", etc.
            </summary>
            <value>
            The main genre of the audio or video; e.g. "classical", "ambient-house", "synthpop", "sci-fi", "drama", etc.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.Mood">
            <summary>
            Gets intended to reflect the mood of the item with a few keywords, e.g. "Romantic", "Sad", "Uplifting", etc.
            </summary>
            <value>
            Intended to reflect the mood of the item with a few keywords, e.g. "Romantic", "Sad", "Uplifting", etc.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.EncodedApplication">
            <summary>
            Gets the name of the software package used to create the file, such as "Microsoft WaveEdit."
            </summary>
            <value>
            The name of the software package used to create the file, such as "Microsoft WaveEdit."
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.EncodedLibrary">
            <summary>
            Gets the software or hardware used to encode this item; e.g. "LAME" or "XviD"
            </summary>
            <value>
            The software or hardware used to encode this item; e.g. "LAME" or "XviD".
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.EncodedLibrarySettings">
            <summary>
            Gets a list of the settings used for encoding this item. No specific format.
            </summary>
            <value>
            A list of the settings used for encoding this item. No specific format.
            </value>
        </member>
        <member name="P:MediaInfo.Model.VideoTags.Summary">
            <summary>
            Gets a plot outline or a summary of the story.
            </summary>
            <value>
            A plot outline or a summary of the story.
            </value>
        </member>
    </members>
</doc>
